name: release

on:
  release: # Docs: <https://help.github.com/en/articles/events-that-trigger-workflows#release-event-release>
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [linux, darwin]
        arch: [amd64, 386]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Generate version value
        run: echo "::set-env name=version::${GITHUB_REF##*/}@`echo ${GITHUB_SHA} | cut -c1-8`"

      - name: Build application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go build -ldflags="-s -w -X mikrotik-hosts-parser/version.version=${version}" -o ./mikrotik-hosts-parser-${{ matrix.os }}-${{ matrix.arch }} .

      - name: Upload to release
        uses: docker://gact/upload-to-release:latest # https://github.com/actions-github/upload-to-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "./mikrotik-hosts-parser-${{ matrix.os }}-${{ matrix.arch }}"
          type: 'application/octet-stream'

  docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Generate version value
        run: echo "::set-env name=version::${GITHUB_REF##*/}@`echo ${GITHUB_SHA} | cut -c1-8`"

      - name: Generate image tag value
        run: echo "::set-env name=image_tag::${GITHUB_REF##*/[vV]}" # `/refs/tags/v1.2.3` -> `1.2.3`

      - name: Make docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_LOGIN }}" --password-stdin &> /dev/null

      - name: Build image
        run: docker build --build-arg "APP_VERSION=${version}" --tag "tarampampam/mikrotik-hosts-parser:${image_tag}" -f ./Dockerfile .

      - name: Push image
        run: docker push "tarampampam/mikrotik-hosts-parser:${image_tag}"
